xvisitor grammar Path;

options {
	superClass = PathAdaptor ;
	parserClass = AntlrDT4Parser ;
}

@header {
	package net.certiv.antlrdt.core.parser.gen;

	import net.certiv.antlrdt.core.parser.PathAdaptor;
}

paths
	: parserRule
	| parserAltRule
	| parserAltTerm
	| lexerRule
	| lexerAltTerm
	| fragRule
	| fragAltTerm
	| modeRule
	;

parserRule		: //parserRuleSpec					{ parserRuleName($RULE_REF); }	{ onExit: ruleDone(); }	;
parserAltRule	: //parserRuleSpec//ruleref			{ ruleAltName($RULE_REF, null); }		;
parserAltTerm	: //parserRuleSpec//terminal		{ ruleAltName($TOKEN_REF, $STRING_LITERAL); }	;

lexerRule		: //lexerRuleSpec					{ lexerRuleName($TOKEN_REF); }	{ onExit: ruleDone(); }	;
lexerAltTerm	: //lexerRuleSpec//terminal			{ ruleAltName($TOKEN_REF, $STRING_LITERAL); }	;

fragRule		: //fragmentRuleSpec 				{ fragmentRuleName($TOKEN_REF); } { onExit: ruleDone(); } ;
fragAltTerm		: //fragmentRuleSpec//terminal		{ ruleAltName($TOKEN_REF, $STRING_LITERAL); }	;

modeRule		: //modeRuleSpec/id 				{ modeName($RULE_REF, $TOKEN_REF); } ;
