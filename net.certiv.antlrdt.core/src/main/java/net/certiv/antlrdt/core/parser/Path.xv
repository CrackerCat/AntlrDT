xvisitor grammar Path;

options {
	superClass = PathAdaptor ;
	parserClass = AntlrDT4Parser ;
}

@header {
	package net.certiv.antlrdt.core.parser.gen;

	import net.certiv.antlrdt.core.parser.PathAdaptor;
}

paths
	: parserRule
	| parserAltRule
	| parserTerminal
	| lexerRule
	| lexerTerminal
	| fragmentRule
	| fragmentTerminal
	| modeRule
	;

parserRule		: //parserRuleSpec				{ onEntry: parserRuleName($RULE_REF); }	{ onExit: parserRuleDone(); }	;
parserAltRule	: //parserRuleSpec//ruleref		{ ruleAltName($RULE_REF); }	;
parserTerminal	: //parserRuleSpec//terminal	{ ruleAltName($TOKEN_REF); }	;

lexerRule		: //lexerRuleSpec				{ lexerRuleName($TOKEN_REF); }	{ onExit: lexerRuleDone(); }	;
lexerTerminal	: //lexerRuleSpec//terminal		{ ruleAltName($TOKEN_REF); }	;

fragmentRule		: //fragmentRuleSpec 			{ fragmentRuleName($TOKEN_REF); } { onExit: fragmentRuleDone(); }	;
fragmentTerminal	: //fragmentRuleSpec//terminal	{ ruleAltName($TOKEN_REF); };

modeRule		: //modeRuleSpec/id 			{ modeName($RULE_REF, $TOKEN_REF); } ;
